int levelOrderTraversal(TreeNode* root) {
        queue<TreeNode*>q;
        q.push(root);
        q.push(NULL);
        int flag=1;
        int leftMost=q.front()->val;
        while(!q.empty()){
            TreeNode* temp=q.front();
            q.pop();
            if(temp==NULL){
                if(!q.empty()){
                    q.push(NULL);
                    flag=1;
                }
            }
            else{
                if(flag)
                    leftMost=temp->val;
                if(temp->left)
                    q.push(temp->left);
                if(temp->right)
                    q.push(temp->right);
                flag=0;
            }
        }
        return leftMost;
    }
    int findBottomLeftValue(TreeNode* root){
        return levelOrderTraversal(root);
    }